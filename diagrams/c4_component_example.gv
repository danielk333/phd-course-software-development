digraph iterative{
    rankdir="TB";
    dpi=300;
    edge [ style=dashed ];
    node[
        shape = rect
        style = "filled, rounded"
        color = "#a4fad0"
    ];
    user [
        label=<
            <table border="0" cellborder="0">
                <tr> <td><b>Scientist</b></td> </tr>
                <tr> <td>[Person]</td> </tr>
                <tr> <td>A researcher using the tool</td> </tr>
            </table>
        >
    ]
    node[
        shape = rect
        style = filled
        fillcolor = "#9db5f7"
        color = "black"
    ];
    cli [
        label=<
            <table border="0" cellborder="0">
                <tr> <td><b>Simulation CLI interface</b></td> </tr>
                <tr> <td>[Container: Python]</td> </tr>
                <tr> <td>The interface for configuring, running, and viewing the simulations</td> </tr>
            </table>
        >
    ]
    storage [
        shape = cylinder
        label=<
            <table border="0" cellborder="0">
                <tr> <td><b>Results</b></td> </tr>
                <tr> <td>[Container: Filesystem and HDF5]</td> </tr>
                <tr> <td>The simulation results stored on a file system using HDF5</td> </tr>
            </table>
        >
    ]
    node[
        shape = rect
        style = filled
        fillcolor = "#bbcdfd"
        color = "black"
    ];
    subgraph cluster_software {
        label=<<b>Visualization tool<br/>[Container: Odin]</b>>
        control [
            label=<
                <table border="0" cellborder="0">
                    <tr> <td><b>Control and command server</b></td> </tr>
                    <tr> <td>[Component: TCP/IP JSON]</td> </tr>
                    <tr> <td>A control and command server that accepts JSON requests over TCP/IP for<br/>controlling and configuring the RTSP server and simulation rendering</td> </tr>
                </table>
            >
        ]        
        rtsp [
            label=<
                <table border="0" cellborder="0">
                    <tr> <td><b>RTSP server</b></td> </tr>
                    <tr> <td>[Component: ffmpeg]</td> </tr>
                    <tr> <td>A RTSP server that streams to a port using ffmpeg bindings</td> </tr>
                </table>
            >
        ]
        render [
            label=<
                <table border="0" cellborder="0">
                    <tr> <td><b>Simulation renderer</b></td> </tr>
                    <tr> <td>[Component: OpenGL]</td> </tr>
                    <tr> <td>Interpolates and renders a 3D visualization of the simulation using OpenGL</td> </tr>
                </table>
            >
        ]
        reader [
            label=<
                <table border="0" cellborder="0">
                    <tr> <td><b>Simulation reader</b></td> </tr>
                    <tr> <td>[Component: HDF5]</td> </tr>
                    <tr> <td>Reads simulation data from the HDF5 based filesystem storage using HDF bindings</td> </tr>
                </table>
            >
        ]
    }
    cli -> control [label="Configures and runs\n[TCP/JSON]"]
    control -> rtsp [label="Controls"]
    control -> render [label="Configures"]
    reader -> storage [label="Reads from"]
    render -> reader [label="Get segment of simulation using"]
    rtsp -> render [label="Get frames using"]
    user -> rtsp [label="Views results\n[RTSP stream]"]
}
